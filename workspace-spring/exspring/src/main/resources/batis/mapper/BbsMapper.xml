<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 현재 Mapper 파일 (SQL문들의 집합)의 고유한 이름을 namespace 속성에 지정 -->
<!-- 일반적으로 여기 등록된 SQL문들을 실행할 인터페이스의 이름과 동일하게 설정 -->
<mapper namespace="kr.ac.kopo.bbs0612.BbsDao">
	<resultMap type="BbsVo" id="bbsMap">
		<!-- 이후 컨 +스 로 result(마이바티스) 자동완성 -->
		<id property="bbsNo" column="bbs_no" />
		<result property="bbsWriter" column="bbs_writer" />
		<result property="bbsTitle" column="bbs_title" />
		<result property="bbsContent" column="bbs_content" />
		<result property="bbsRegDate" column="bbs_reg_date" />
		<result property="bbsCount" column="bbs_count" />
	
		<!-- AttachVo의 리스트를 만들어 attachList에 담음 -->
		<collection property="attachList" ofType="AttachVo">
			<result property="attNo" column="att_no" />
			<result property="attOrgName" column="att_org_name" />
			<result property="attNewName" column="att_new_name" />
			<result property="attBbsNo" column="att_bbs_no" />

		</collection>

	</resultMap>


	<!-- 실행할 SQL문과 동일한 이름의 엘리먼트를 사용하여 SQL문을 등록 -->
	<!-- SQL문의 고유한 이름을 id속성에 저장 -->
	<!-- 보통SQL문을 실행할 때 사용할 인터페이스의 메서드 이름과 동일하게 설정 -->
	<!-- 실행결과 레코드 1개를 담을 자바객체의 클래스명을 resultType속성에 저장 -->
	<select id="selectBbsList" resultType="BbsVo">

		SELECT bbs_no, bbs_title, bbs_writer, bbs_reg_date, bbs_count FROM bbs
	</select>

	<!-- //실행에 필요한 값을 받는 경우에는, 받을 값의 타입을 parameterType속성에 저장 -->
	<select id="selectBbs" parameterType="int" resultMap="bbsMap">
		SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count,
		att_no,att_org_name,att_new_name,att_bbs_no
		FROM bbs LEFT OUTER join ATTACH on bbs_no=att_bbs_no where bbs_no=#{bbsNo}
	</select>

	<!-- 파라미터로 받은 객체의 속성(변수)값을 SQL문에 주입하기 위해서 #{변수명}을 사용 -->
	<insert id="insertBbs" parameterType="BbsVo">

		<!-- insert문을 수행하기 전에 select키의 sql문을 실행하고, 결과로 나오는 int값을 파라미터 객체(BbsVo)의 
			bbsNo속성(변수)에 저장 -->
		<selectKey keyProperty="bbsNo" resultType="int"
			order="BEFORE">
			select seq_bbs_no.NEXTVAL from dual
		</selectKey>

		INSERT into bbs (bbs_no,bbs_title,bbs_content,bbs_writer)
		values(#{bbsNo},#{bbsTitle},#{bbsContent},#{bbsWriter})
	</insert>

	<update id="updateBbs" parameterType="BbsVo">
		UPDATE bbs set bbs_title =#{bbsTitle}, bbs_content =#{bbsContent} where
		bbs_no =#{bbsNo}
	</update>


	<!-- 파라미터 타입이 단일값을 갖는 경우(String,Integer,...)에는 -->
	<!-- #{}의 이름은 무엇을 사용하든 상관없음 -->
	<delete id="deleteBbs" parameterType="int">

		DELETE FROM bbs WHERE bbs_no=#{bbsNo}
	</delete>


	



</mapper>

