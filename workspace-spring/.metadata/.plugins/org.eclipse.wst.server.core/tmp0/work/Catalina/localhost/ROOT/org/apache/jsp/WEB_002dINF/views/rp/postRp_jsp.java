/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2020-10-20 10:57:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.rp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class postRp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/workspace-spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SNS/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1593666886237L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<title>댓글</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#templates {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body text align=\"center\">\r\n");
      out.write("\t<h1>댓글 구현 화면</h1>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<table border=\"1\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>작성자:</th>\r\n");
      out.write("\t\t\t\t\t<th>글내용:</th>\r\n");
      out.write("\t\t\t\t\t<th>좋아요:</th>\r\n");
      out.write("\t\t\t\t\t<th>날짜:</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${postData.postId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><textarea>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${postData.postContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${postData.postLike}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${postData.postDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- \t-------------------댓글 --------------------- -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- -----------댓글 작성 정보 폼 시작 ----------- -->\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<form action=\"\" id=\"rpform\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"rpId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.memId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\t\t\treadonly=\"readonly\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<textarea name=\"rpContent\" rows=\"15\" cols=\"23\" placeholder=\"댓글란\"></textarea>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"rpPostNo\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${postData.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t<input type=\"button\" value=\"저장\" id=\"saveBtn\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<!-- --------------댓글 작성 정보 폼 끝 --------- -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- ------------댓글 리스트 ---------------- -->\r\n");
      out.write("\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<div id=\"rpDiv\"></div>\r\n");
      out.write("\t<div id=\"bodyContents\"></div>\r\n");
      out.write("\t<div id=\"templates\">\r\n");
      out.write("\t\t<div id=\"rpTemplate\">\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<span data-id=\"rpId\"></span> <span data-id=\"rpDate\"></span>\r\n");
      out.write("\t\t\t\t<!-- \t\t\t\t<div data-id=\"rpContent\"></div> -->\r\n");
      out.write("\t\t\t\t</br> \r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("<!-- \t\t\t\t<textarea data-id = \"rpContent\" name=\"rpContent\" cols=\"10\"></textarea> -->\r\n");
      out.write("\t\t\t\t<div data-id = \"rpContent\" name=\"rpContent\"> </div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t<hr />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 엔터처리를 깔끔하게 해주는 pre 태그 -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- ------------댓글 리스트 끝 ---------------- -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!---------------function 기능 생성 시작---------------------->\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction refreshReplyList() {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"../replyList\", // 리스트 요청\r\n");
      out.write("\t\t\t\tmethod : \"GET\",\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\trpPostNo : $('[name=\"rpPostNo\"]').val()\r\n");
      out.write("\t\t\t\t// 값 읽어오기\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t\t}).done(function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t$('#rpDiv').html(''); // 목록 초기화\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n");
      out.write("\t\t\t\t\tvar rep = data[i];\r\n");
      out.write("\t\t\t\t\t// \t\t\t#rpTemplate의 값을 가지는 요소를 복제하여 #rpDiv에 삽입\r\n");
      out.write("\t\t\t\t\t// \t\t\tvar $tdiv = $('#rpTemplate').clone().appendTo('#rpDiv');\t\t\r\n");
      out.write("\t\t\t\t\tvar $tdiv = $('#rpTemplate').clone().appendTo('#rpDiv');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor ( var p in rep) {\r\n");
      out.write("\t\t\t\t\t\t$tdiv.find('[data-id=\"' + p + '\"]').html(rep[p]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t// \t\t\terror발생시 rpId를 rpNo으로 수정 후 해보기\r\n");
      out.write("\t\t\t\t\t$tdiv.find('button.delBtn').attr('data-no', rep.rpNo);\r\n");
      out.write("\t\t\t\t\t$tdiv.find('button.upBtn').attr('data-no', rep.rpNo);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).fail(function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\talert(\"refreshReplyList Request failed: \" + textStatus);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//function기능 생성 종료\r\n");
      out.write("\t\t$(function() { //문서 끝까지 모두 읽은 후 이 함수를 실행\r\n");
      out.write("\t\t\trefreshReplyList();\r\n");
      out.write("\r\n");
      out.write("\t\t\t// ------------저장 버튼  실행---------------\t\r\n");
      out.write("\t\t\t$('#saveBtn').on('click', function() { // 저장버튼 클릭시 실행 함수\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"../add\",\r\n");
      out.write("\t\t\t\t\tmethod : \"POST\",\r\n");
      out.write("\t\t\t\t\tdata : $('#rpform').serialize(), // 폼 또는 입력 엘리먼트들에 대해서 serialize()명령을 사용하면 선택된 폼 내부의 모든 엘리먼트들을 파라미터 문자열 형태로 변환\t\r\n");
      out.write("\t\t\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t\t\t}).done(function(data) {\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\tif (data.result > 0) {\r\n");
      out.write("\t\t\t\t\t\talert(\"성공\");\r\n");
      out.write("\t\t\t\t\t\t$('[name=\"rpContent\"]').val('');\r\n");
      out.write("\t\t\t\t\t\trefreshReplyList() //성공처리한 후 새로고침\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert(\"실패\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}).fail(function(jqXHR, testStatus) {\r\n");
      out.write("\t\t\t\t\talert(\"Request failed: \" + testStatus);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t// --------------------삭제 버튼 실행----------------\r\n");
      out.write("\t\t\t$('#rpDiv').on('click', '.delBtn', function() {\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"../delete\",\r\n");
      out.write("\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\trpNo : $(this).attr('data-no')\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdatatype : \"json\"\r\n");
      out.write("\t\t\t\t}).done(function(data) {\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\tif (data.result > 0) {\r\n");
      out.write("\t\t\t\t\t\talert('댓글 삭제 성공')\r\n");
      out.write("\t\t\t\t\t\trefreshReplyList()\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert('댓글 삭제 실패')\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}).fail(function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t\talert(\"Request Failed :\" + textStatus);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t// --------------------수정 버튼 실행----------------\r\n");
      out.write("\t\t\t$('#rpDiv').on('click', '.upBtn', function() {\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"../update\",\r\n");
      out.write("\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\trpNo : $(this).attr('data-no')\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdatatype : \"json\"\r\n");
      out.write("\t\t\t\t}).done(function(data) {\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\tif (data.result.rpNo > 0) {\r\n");
      out.write("\t\t\t\t\t\talert('리드 성공')\r\n");
      out.write("\t\t\t\t\t\trefreshReplyList()\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert('리드 실패')\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}).fail(function(jqXHR, textStatus) {\r\n");
      out.write("\t\t\t\t\talert(\"Request Failed :\" + textStatus);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/views/rp/postRp.jsp(70,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.memId == postData.postId}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t\t\t\t<button type=\"button\" class=\"delBtn\">삭제</button>\r\n");
        out.write("\t\t\t\t\t<button type=\"button\" class=\"upBtn\">수정</button>\r\n");
        out.write("\t\t\t\t");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
